buildscript {
	ext {
		springBootVersion = '2.1.2.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integration-test/java')
        }
        resources.srcDir file('src/main/resources')
    }
    externalIntegrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/external-integration-test/java')
        }
        resources.srcDir file('src/main/resources')
    }
}

configurations {
	integrationTestImplementation.extendsFrom testImplementation
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
    externalIntegrationTestImplementation.extendsFrom testImplementation
    externalIntegrationTestCompile.extendsFrom testCompile
    externalIntegrationTestRuntime.extendsFrom testRuntime
}

dependencies {
	  implementation 'org.springframework.boot:spring-boot-starter-data-rest'
      implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
      implementation 'org.springframework.boot:spring-boot-starter-web'
      implementation 'org.springframework.boot:spring-boot-actuator'
      runtimeOnly 'org.postgresql:postgresql'
      testImplementation 'org.springframework.boot:spring-boot-starter-test'
      
      testImplementation "junit:junit:4.12"
	  testRuntime('org.junit.jupiter:junit-jupiter-engine:5.3.1')
	  testImplementation('org.mockito:mockito-core:2.+')
	  testImplementation('org.mockito:mockito-junit-jupiter:2.18.3')
      compile("com.h2database:h2:1.4.191")
      compile group: 'com.h2database', name: 'h2', version: '1.3.148'
      runtime('com.h2database:h2')
      runtimeOnly('com.h2database:h2')
}

task integrationTest(type: Test) {
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
}

task externalIntegrationTest(type: Test) {
    testClassesDirs = sourceSets.externalIntegrationTest.output.classesDirs
    classpath = sourceSets.externalIntegrationTest.runtimeClasspath
    outputs.upToDateWhen { false }
}

check.dependsOn integrationTest
integrationTest.mustRunAfter test


// test {
//     testLogging {
//         events "passed", "skipped", "failed", "standardOut", "standardError"
//         outputs.upToDateWhen {false}
//     }
// }